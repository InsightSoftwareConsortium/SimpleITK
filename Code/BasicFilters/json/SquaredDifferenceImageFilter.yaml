name: SquaredDifferenceImageFilter
template_code_filename: BinaryFunctorFilter
template_test_filename: ImageFilter
constant_type: double
number_of_inputs: 2
doc: Some global documentation
pixel_types: BasicPixelIDTypeList
members: []
tests:
- tag: 2DStapleImages
  description: Default parameter settings
  settings: []
  tolerance: 1.0e-08
  inputA_cast: sitkUInt16
  inputB_cast: sitkUInt16
  inputs:
  - Input/STAPLE1.png
  - Input/STAPLE2.png
- tag: Ramp_Short1
  description: Ramp
  settings: []
  tolerance: 1.0e-08
  inputs:
  - Input/Ramp-Zero-One-Float.nrrd
  - Input/Ramp-One-Zero-Float.nrrd
- tag: Ramp_Short2
  description: Ramp
  settings: []
  tolerance: 1.0e-08
  inputA_cast: sitkUInt32
  inputB_cast: sitkUInt32
  inputs:
  - Input/Ramp-Up-Short.nrrd
  - Input/Ramp-Down-Short.nrrd
briefdescription: Implements pixel-wise the computation of squared difference.
detaileddescription: >-
  This filter is parameterized over the types of the two input images and the type of the output image.


  Numeric conversions (castings) are done by the C++ defaults.


  The filter will walk over all the pixels in the two input images, and for each one of them it will do the following:




  \li cast the input 1 pixel value to double


  \li cast the input 2 pixel value to double


  \li compute the difference of the two pixel values


  \li compute the square of the difference


  \li cast the double value resulting from sqr() to the pixel type of the output image


  \li store the casted value into the output image.





  The filter expect all images to have the same dimension (e.g. all 2D, or all 3D, or all ND)
itk_module: ITKImageCompare
itk_group: ImageCompare
in_place: true
